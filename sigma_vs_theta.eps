%!PS-Adobe-2.0
%%Title: sigma_vs_theta.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Mon Jan 28 14:53:47 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 10.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -666 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (sigma_vs_theta.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (orblancog)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Jan 28 14:53:47 2013)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 770 lineto 50 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 2000 scalefont setfont
1.000 UL
LTb
9800 2639 M
63 0 V
-6264 0 R
-63 0 V
stroke
8600 2639 M
[ [(Helvetica) 2000.0 0.0 true true 0 ( 0.7)]
] -666.7 MRshow
1.000 UL
LTb
9800 3266 M
63 0 V
-6264 0 R
-63 0 V
stroke
8600 3266 M
[ [(Helvetica) 2000.0 0.0 true true 0 ( 0.8)]
] -666.7 MRshow
1.000 UL
LTb
9800 3893 M
63 0 V
-6264 0 R
-63 0 V
stroke
8600 3893 M
[ [(Helvetica) 2000.0 0.0 true true 0 ( 0.9)]
] -666.7 MRshow
1.000 UL
LTb
9800 4520 M
63 0 V
-6264 0 R
-63 0 V
stroke
8600 4520 M
[ [(Helvetica) 2000.0 0.0 true true 0 ( 1)]
] -666.7 MRshow
1.000 UL
LTb
9800 5146 M
63 0 V
-6264 0 R
-63 0 V
stroke
8600 5146 M
[ [(Helvetica) 2000.0 0.0 true true 0 ( 1.1)]
] -666.7 MRshow
1.000 UL
LTb
9800 5773 M
63 0 V
-6264 0 R
-63 0 V
stroke
8600 5773 M
[ [(Helvetica) 2000.0 0.0 true true 0 ( 1.2)]
] -666.7 MRshow
1.000 UL
LTb
9800 6400 M
63 0 V
-6264 0 R
-63 0 V
stroke
8600 6400 M
[ [(Helvetica) 2000.0 0.0 true true 0 ( 1.3)]
] -666.7 MRshow
1.000 UL
LTb
9744 2639 M
0 63 V
0 3698 R
0 -63 V
stroke
9744 639 M
[ [(Helvetica) 2000.0 0.0 true true 0 ( 1e-07)]
] -666.7 MCshow
1.000 UL
LTb
9374 2639 M
0 31 V
0 3730 R
0 -31 V
8885 2639 M
0 31 V
0 3730 R
0 -31 V
8634 2639 M
0 31 V
0 3730 R
0 -31 V
8515 2639 M
0 63 V
0 3698 R
0 -63 V
stroke
8515 639 M
[ [(Helvetica) 2000.0 0.0 true true 0 ( 1e-06)]
] -666.7 MCshow
1.000 UL
LTb
8145 2639 M
0 31 V
0 3730 R
0 -31 V
7656 2639 M
0 31 V
0 3730 R
0 -31 V
7405 2639 M
0 31 V
0 3730 R
0 -31 V
7286 2639 M
0 63 V
0 3698 R
0 -63 V
stroke
7286 639 M
[ [(Helvetica) 2000.0 0.0 true true 0 ( 1e-05)]
] -666.7 MCshow
1.000 UL
LTb
6916 2639 M
0 31 V
0 3730 R
0 -31 V
6427 2639 M
0 31 V
0 3730 R
0 -31 V
6176 2639 M
0 31 V
0 3730 R
0 -31 V
6057 2639 M
0 63 V
0 3698 R
0 -63 V
stroke
6057 639 M
[ [(Helvetica) 2000.0 0.0 true true 0 ( 0.0001)]
] -666.7 MCshow
1.000 UL
LTb
5687 2639 M
0 31 V
0 3730 R
0 -31 V
5198 2639 M
0 31 V
0 3730 R
0 -31 V
4947 2639 M
0 31 V
0 3730 R
0 -31 V
4828 2639 M
0 63 V
0 3698 R
0 -63 V
stroke
4828 639 M
[ [(Helvetica) 2000.0 0.0 true true 0 ( 0.001)]
] -666.7 MCshow
1.000 UL
LTb
4458 2639 M
0 31 V
0 3730 R
0 -31 V
3969 2639 M
0 31 V
0 3730 R
0 -31 V
3718 2639 M
0 31 V
0 3730 R
0 -31 V
3599 2639 M
0 63 V
0 3698 R
0 -63 V
stroke
3599 639 M
[ [(Helvetica) 2000.0 0.0 true true 0 ( 0.01)]
] -666.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
9800 6400 N
0 -3761 V
-6201 0 V
0 3761 V
6201 0 V
Z stroke
LCb setrgbcolor
1600 4519 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Symbol) 2000.0 0.0 true true 0 (s)]
[(Symbol) 1600.0 1000.0 true true 0 (2)]
[(Symbol) 1600.0 -600.0 true true 0 (\\)]
[(Symbol) 2000.0 0.0 true true 0 (text)]
[(Symbol) 2000.0 0.0 true true 0 (rad)]
[(Helvetica) 2000.0 0.0 true true 0 (/)]
[(Symbol) 2000.0 0.0 true true 0 (s)]
[(Symbol) 1600.0 1000.0 true true 0 (2)]
[(Symbol) 1600.0 -600.0 true true 0 (\\)]
[(Symbol) 2000.0 0.0 true true 0 (text)]
[(Symbol) 2000.0 0.0 true true 0 (theo)]
] -666.7 MCshow
grestore
LTb
LCb setrgbcolor
6699 -2361 M
[ [(Symbol) 2000.0 0.0 true true 0 (Q)]
[(Helvetica) 2000.0 0.0 true true 0 ( [rad])]
] -666.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
LCb setrgbcolor
-4864 5337 M
[ [(Helvetica) 2000.0 0.0 true true 0 (Tracking \(PLACET\))]
] -666.7 MRshow
LT0
-3664 5337 M
4863 0 V
-4863 31 R
0 -62 V
4863 62 R
0 -62 V
9744 2829 M
0 584 V
-31 -584 R
62 0 V
-62 584 R
62 0 V
9374 3280 M
0 107 V
-31 -107 R
62 0 V
-62 107 R
62 0 V
-248 523 R
0 104 V
-31 -104 R
62 0 V
-62 104 R
62 0 V
9004 3814 M
0 101 V
-31 -101 R
62 0 V
-62 101 R
62 0 V
8885 3712 M
0 99 V
-31 -99 R
62 0 V
-62 99 R
62 0 V
8787 3670 M
0 98 V
-31 -98 R
62 0 V
-62 98 R
62 0 V
8634 3534 M
0 95 V
-31 -95 R
62 0 V
-62 95 R
62 0 V
8515 3308 M
0 91 V
-31 -91 R
62 0 V
-62 91 R
62 0 V
8145 3276 M
0 91 V
-31 -91 R
62 0 V
-62 91 R
62 0 V
-248 -59 R
0 91 V
-31 -91 R
62 0 V
-62 91 R
62 0 V
7775 3279 M
0 90 V
-31 -90 R
62 0 V
-62 90 R
62 0 V
7656 3195 M
0 89 V
-31 -89 R
62 0 V
-62 89 R
62 0 V
7559 3181 M
0 89 V
-31 -89 R
62 0 V
-62 89 R
62 0 V
-185 311 R
0 96 V
-31 -96 R
62 0 V
-62 96 R
62 0 V
-150 -96 R
0 96 V
-31 -96 R
62 0 V
-62 96 R
62 0 V
6916 3517 M
0 95 V
-31 -95 R
62 0 V
-62 95 R
62 0 V
-247 274 R
0 102 V
-31 -102 R
62 0 V
stroke 6731 3886 M
-62 102 R
62 0 V
6546 3714 M
0 98 V
-31 -98 R
62 0 V
-62 98 R
62 0 V
6427 3626 M
0 97 V
-31 -97 R
62 0 V
-62 97 R
62 0 V
6330 3544 M
0 223 V
-31 -223 R
62 0 V
-62 223 R
62 0 V
6247 3429 M
0 153 V
-31 -153 R
62 0 V
-62 153 R
62 0 V
-102 -74 R
0 125 V
-31 -125 R
62 0 V
-62 125 R
62 0 V
-94 -115 R
0 111 V
-31 -111 R
62 0 V
-62 111 R
62 0 V
-87 81 R
0 108 V
-31 -108 R
62 0 V
-62 108 R
62 0 V
-401 -80 R
0 99 V
-31 -99 R
62 0 V
-62 99 R
62 0 V
5471 3482 M
0 94 V
-31 -94 R
62 0 V
-62 94 R
62 0 V
5317 3404 M
0 93 V
-31 -93 R
62 0 V
-62 93 R
62 0 V
-150 25 R
0 95 V
-31 -95 R
62 0 V
-62 95 R
62 0 V
5101 3507 M
0 94 V
-31 -94 R
62 0 V
-62 94 R
62 0 V
-114 -72 R
0 96 V
-31 -96 R
62 0 V
-62 96 R
62 0 V
-102 -98 R
0 95 V
-31 -95 R
62 0 V
-62 95 R
62 0 V
4828 3505 M
0 95 V
-31 -95 R
62 0 V
-62 95 R
62 0 V
-401 -66 R
0 96 V
-31 -96 R
62 0 V
-62 96 R
62 0 V
-401 -63 R
0 96 V
-31 -96 R
62 0 V
-62 96 R
62 0 V
stroke 4119 3663 M
3969 3499 M
0 95 V
-31 -95 R
62 0 V
-62 95 R
62 0 V
9744 3121 Pls
9374 3334 Pls
9157 3962 Pls
9004 3864 Pls
8885 3761 Pls
8787 3719 Pls
8634 3582 Pls
8515 3354 Pls
8145 3321 Pls
7928 3353 Pls
7775 3324 Pls
7656 3239 Pls
7559 3225 Pls
7405 3629 Pls
7286 3629 Pls
6916 3564 Pls
6700 3937 Pls
6546 3763 Pls
6427 3674 Pls
6330 3655 Pls
6247 3506 Pls
6176 3570 Pls
6113 3574 Pls
6057 3764 Pls
5687 3788 Pls
5471 3529 Pls
5317 3451 Pls
5198 3569 Pls
5101 3554 Pls
5018 3577 Pls
4947 3575 Pls
4828 3552 Pls
4458 3582 Pls
4088 3615 Pls
3969 3546 Pls
-1233 5337 Pls
% End plot #1
% Begin plot #2
1.000 UP
1.000 UL
LT1
LCb setrgbcolor
-4864 3337 M
[ [(Helvetica) 2000.0 0.0 true true 0 (Approx. \(MAPCLASS2\))]
] -666.7 MRshow
LT1
-3664 3337 M
4863 0 V
9744 4520 M
-370 21 V
-217 -18 V
-153 -2 V
-119 0 V
-98 0 V
-153 -1 V
-119 0 V
-370 0 V
-217 0 V
-153 0 V
-119 0 V
-97 0 V
-154 0 V
-119 0 V
-370 0 V
-216 0 V
-154 0 V
-119 0 V
-97 0 V
-83 0 V
-71 0 V
-63 0 V
-56 0 V
-370 1 V
-216 3 V
-154 3 V
-119 5 V
-97 5 V
-83 6 V
-71 8 V
-119 17 V
-370 145 V
-370 570 V
-119 413 V
9744 4520 Crs
9374 4541 Crs
9157 4523 Crs
9004 4521 Crs
8885 4521 Crs
8787 4521 Crs
8634 4520 Crs
8515 4520 Crs
8145 4520 Crs
7928 4520 Crs
7775 4520 Crs
7656 4520 Crs
7559 4520 Crs
7405 4520 Crs
7286 4520 Crs
6916 4520 Crs
6700 4520 Crs
6546 4520 Crs
6427 4520 Crs
6330 4520 Crs
6247 4520 Crs
6176 4520 Crs
6113 4520 Crs
6057 4520 Crs
5687 4521 Crs
5471 4524 Crs
5317 4527 Crs
5198 4532 Crs
5101 4537 Crs
5018 4543 Crs
4947 4551 Crs
4828 4568 Crs
4458 4713 Crs
4088 5283 Crs
3969 5696 Crs
-1233 3337 Crs
% End plot #2
1.000 UL
LTb
9800 6400 N
0 -3761 V
-6201 0 V
0 3761 V
6201 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
%%Pages: 1
