%!PS-Adobe-2.0
%%Title: im01.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Thu Oct 25 01:37:52 2012
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Times-Roman,40) findfont 140 scalefont setfont
1.000 UL
LTb
714 420 M
63 0 V
6185 0 R
-63 0 V
stroke
630 420 M
gsave 0 setgray
[ [(Times-Roman,40) 140.0 0.0 true true 0 ( 0.1)]
] -46.7 MRshow
grestore
1.000 UL
LTb
714 867 M
31 0 V
6217 0 R
-31 0 V
714 1128 M
31 0 V
6217 0 R
-31 0 V
714 1313 M
31 0 V
6217 0 R
-31 0 V
714 1457 M
31 0 V
6217 0 R
-31 0 V
714 1575 M
31 0 V
6217 0 R
-31 0 V
714 1674 M
31 0 V
6217 0 R
-31 0 V
714 1760 M
31 0 V
6217 0 R
-31 0 V
714 1836 M
31 0 V
6217 0 R
-31 0 V
714 1904 M
63 0 V
6185 0 R
-63 0 V
stroke
630 1904 M
gsave 0 setgray
[ [(Times-Roman,40) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
grestore
1.000 UL
LTb
714 2351 M
31 0 V
6217 0 R
-31 0 V
714 2612 M
31 0 V
6217 0 R
-31 0 V
714 2797 M
31 0 V
6217 0 R
-31 0 V
714 2941 M
31 0 V
6217 0 R
-31 0 V
714 3059 M
31 0 V
6217 0 R
-31 0 V
714 3158 M
31 0 V
6217 0 R
-31 0 V
714 3244 M
31 0 V
6217 0 R
-31 0 V
714 3320 M
31 0 V
6217 0 R
-31 0 V
714 3388 M
63 0 V
6185 0 R
-63 0 V
stroke
630 3388 M
gsave 0 setgray
[ [(Times-Roman,40) 140.0 0.0 true true 0 ( 10)]
] -46.7 MRshow
grestore
1.000 UL
LTb
714 3835 M
31 0 V
6217 0 R
-31 0 V
714 4096 M
31 0 V
6217 0 R
-31 0 V
714 4281 M
31 0 V
6217 0 R
-31 0 V
714 4425 M
31 0 V
6217 0 R
-31 0 V
714 4543 M
31 0 V
6217 0 R
-31 0 V
714 4642 M
31 0 V
6217 0 R
-31 0 V
714 4728 M
31 0 V
6217 0 R
-31 0 V
714 4804 M
31 0 V
6217 0 R
-31 0 V
714 4872 M
63 0 V
6185 0 R
-63 0 V
stroke
630 4872 M
gsave 0 setgray
[ [(Times-Roman,40) 140.0 0.0 true true 0 ( 100)]
] -46.7 MRshow
grestore
1.000 UL
LTb
714 420 M
0 63 V
0 4389 R
0 -63 V
stroke
714 280 M
gsave 0 setgray
[ [(Times-Roman,40) 140.0 0.0 true true 0 ( 0.001)]
] -46.7 MCshow
grestore
1.000 UL
LTb
1341 420 M
0 31 V
0 4421 R
0 -31 V
1708 420 M
0 31 V
0 4421 R
0 -31 V
1968 420 M
0 31 V
0 4421 R
0 -31 V
2170 420 M
0 31 V
0 4421 R
0 -31 V
2335 420 M
0 31 V
0 4421 R
0 -31 V
2474 420 M
0 31 V
0 4421 R
0 -31 V
2595 420 M
0 31 V
0 4421 R
0 -31 V
2701 420 M
0 31 V
0 4421 R
0 -31 V
2797 420 M
0 63 V
0 4389 R
0 -63 V
stroke
2797 280 M
gsave 0 setgray
[ [(Times-Roman,40) 140.0 0.0 true true 0 ( 0.01)]
] -46.7 MCshow
grestore
1.000 UL
LTb
3424 420 M
0 31 V
0 4421 R
0 -31 V
3790 420 M
0 31 V
0 4421 R
0 -31 V
4051 420 M
0 31 V
0 4421 R
0 -31 V
4252 420 M
0 31 V
0 4421 R
0 -31 V
4417 420 M
0 31 V
0 4421 R
0 -31 V
4557 420 M
0 31 V
0 4421 R
0 -31 V
4678 420 M
0 31 V
0 4421 R
0 -31 V
4784 420 M
0 31 V
0 4421 R
0 -31 V
4879 420 M
0 63 V
0 4389 R
0 -63 V
stroke
4879 280 M
gsave 0 setgray
[ [(Times-Roman,40) 140.0 0.0 true true 0 ( 0.1)]
] -46.7 MCshow
grestore
1.000 UL
LTb
5506 420 M
0 31 V
0 4421 R
0 -31 V
5873 420 M
0 31 V
0 4421 R
0 -31 V
6133 420 M
0 31 V
0 4421 R
0 -31 V
6335 420 M
0 31 V
0 4421 R
0 -31 V
6500 420 M
0 31 V
0 4421 R
0 -31 V
6639 420 M
0 31 V
0 4421 R
0 -31 V
6760 420 M
0 31 V
0 4421 R
0 -31 V
6867 420 M
0 31 V
0 4421 R
0 -31 V
6962 420 M
0 63 V
0 4389 R
0 -63 V
stroke
6962 280 M
gsave 0 setgray
[ [(Times-Roman,40) 140.0 0.0 true true 0 ( 1)]
] -46.7 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTb
714 420 M
6248 0 V
0 4452 V
-6248 0 V
714 420 L
LTb
140 2646 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Roman,40) 140.0 0.0 true true 0 (F)]
] -46.7 MCshow
grestore
grestore
LTb
3838 70 M
gsave 0 setgray
[ [(Times-Roman,40) 140.0 0.0 true true 0 (K [m)]
[(Times-Roman,40) 112.0 70.0 true true 0 (-2)]
[(Times-Roman,40) 140.0 0.0 true true 0 (])]
] -60.7 MCshow
grestore
1.000 UP
1.000 UP
1.000 UL
LT0
LTb
6311 4739 M
gsave 0 setgray
[ [(Times-Roman,40) 140.0 0.0 true true 0 (F Lmin)]
] -46.7 MRshow
grestore
LT0
6395 4739 M
399 0 V
714 733 M
627 25 V
367 24 V
260 24 V
202 23 V
165 22 V
139 22 V
121 22 V
106 21 V
96 21 V
627 187 V
366 162 V
261 142 V
201 128 V
165 115 V
140 106 V
121 98 V
106 91 V
95 84 V
627 633 V
367 422 V
260 317 V
202 254 V
165 212 V
139 182 V
121 160 V
107 142 V
95 128 V
714 733 Pls
1341 758 Pls
1708 782 Pls
1968 806 Pls
2170 829 Pls
2335 851 Pls
2474 873 Pls
2595 895 Pls
2701 916 Pls
2797 937 Pls
3424 1124 Pls
3790 1286 Pls
4051 1428 Pls
4252 1556 Pls
4417 1671 Pls
4557 1777 Pls
4678 1875 Pls
4784 1966 Pls
4879 2050 Pls
5506 2683 Pls
5873 3105 Pls
6133 3422 Pls
6335 3676 Pls
6500 3888 Pls
6639 4070 Pls
6760 4230 Pls
6867 4372 Pls
6962 4500 Pls
6594 4739 Pls
1.000 UP
1.000 UL
LT1
LTb
6311 4599 M
gsave 0 setgray
[ [(Times-Roman,40) 140.0 0.0 true true 0 (F thin lens)]
] -46.7 MRshow
grestore
LT1
6395 4599 M
399 0 V
1707 3045 M
260 -536 V
202 -273 V
165 -59 V
139 17 V
121 31 V
106 32 V
96 32 V
86 29 V
79 26 V
72 23 V
67 20 V
63 17 V
58 14 V
55 12 V
51 10 V
49 9 V
47 8 V
44 7 V
42 6 V
40 6 V
39 5 V
37 5 V
35 5 V
34 5 V
33 5 V
32 4 V
30 5 V
30 4 V
29 5 V
28 5 V
27 5 V
26 4 V
25 5 V
25 5 V
24 6 V
24 5 V
23 5 V
22 5 V
22 6 V
21 5 V
21 6 V
20 6 V
20 5 V
20 6 V
19 6 V
18 6 V
18 6 V
18 6 V
18 6 V
17 6 V
17 7 V
17 6 V
16 6 V
16 6 V
16 7 V
15 6 V
15 6 V
15 7 V
15 6 V
15 7 V
14 6 V
14 7 V
14 6 V
13 7 V
14 6 V
13 7 V
13 7 V
13 6 V
12 7 V
13 6 V
12 7 V
12 7 V
12 6 V
12 7 V
12 6 V
11 7 V
12 6 V
11 7 V
11 6 V
11 7 V
11 7 V
10 6 V
11 7 V
10 6 V
11 7 V
10 6 V
10 7 V
10 6 V
10 6 V
10 7 V
9 6 V
10 7 V
10 6 V
9 6 V
9 7 V
9 6 V
9 6 V
9 7 V
9 6 V
9 6 V
9 7 V
9 6 V
stroke
4923 2970 M
8 6 V
9 6 V
8 6 V
8 7 V
9 6 V
8 6 V
8 6 V
8 6 V
8 6 V
8 6 V
8 6 V
7 6 V
8 6 V
8 6 V
7 6 V
8 6 V
7 6 V
8 6 V
7 6 V
7 6 V
7 5 V
8 6 V
7 6 V
7 6 V
7 6 V
7 5 V
7 6 V
6 6 V
7 5 V
7 6 V
7 6 V
6 5 V
7 6 V
6 6 V
7 5 V
6 6 V
7 5 V
6 6 V
6 5 V
7 6 V
6 5 V
6 6 V
6 5 V
6 5 V
6 6 V
6 5 V
6 5 V
6 6 V
6 5 V
6 5 V
6 6 V
5 5 V
6 5 V
6 5 V
6 5 V
5 6 V
6 5 V
5 5 V
6 5 V
5 5 V
6 5 V
5 5 V
6 5 V
5 5 V
5 5 V
6 5 V
5 5 V
5 5 V
5 5 V
6 5 V
5 5 V
5 5 V
5 5 V
5 5 V
5 5 V
5 4 V
5 5 V
5 5 V
5 5 V
5 5 V
5 4 V
5 5 V
4 5 V
1707 3045 Crs
1967 2509 Crs
2169 2236 Crs
2334 2177 Crs
2473 2194 Crs
2594 2225 Crs
2700 2257 Crs
2796 2289 Crs
2882 2318 Crs
2961 2344 Crs
3033 2367 Crs
3100 2387 Crs
3163 2404 Crs
3221 2418 Crs
3276 2430 Crs
3327 2440 Crs
3376 2449 Crs
3423 2457 Crs
3467 2464 Crs
3509 2470 Crs
3549 2476 Crs
3588 2481 Crs
3625 2486 Crs
3660 2491 Crs
3694 2496 Crs
3727 2501 Crs
3759 2505 Crs
3789 2510 Crs
3819 2514 Crs
3848 2519 Crs
3876 2524 Crs
3903 2529 Crs
3929 2533 Crs
3954 2538 Crs
3979 2543 Crs
4003 2549 Crs
4027 2554 Crs
4050 2559 Crs
4072 2564 Crs
4094 2570 Crs
4115 2575 Crs
4136 2581 Crs
4156 2587 Crs
4176 2592 Crs
4196 2598 Crs
4215 2604 Crs
4233 2610 Crs
4251 2616 Crs
4269 2622 Crs
4287 2628 Crs
4304 2634 Crs
4321 2641 Crs
4338 2647 Crs
4354 2653 Crs
4370 2659 Crs
4386 2666 Crs
4401 2672 Crs
4416 2678 Crs
4431 2685 Crs
4446 2691 Crs
4461 2698 Crs
4475 2704 Crs
4489 2711 Crs
4503 2717 Crs
4516 2724 Crs
4530 2730 Crs
4543 2737 Crs
4556 2744 Crs
4569 2750 Crs
4581 2757 Crs
4594 2763 Crs
4606 2770 Crs
4618 2777 Crs
4630 2783 Crs
4642 2790 Crs
4654 2796 Crs
4665 2803 Crs
4677 2809 Crs
4688 2816 Crs
4699 2822 Crs
4710 2829 Crs
4721 2836 Crs
4731 2842 Crs
4742 2849 Crs
4752 2855 Crs
4763 2862 Crs
4773 2868 Crs
4783 2875 Crs
4793 2881 Crs
4803 2887 Crs
4813 2894 Crs
4822 2900 Crs
4832 2907 Crs
4842 2913 Crs
4851 2919 Crs
4860 2926 Crs
4869 2932 Crs
4878 2938 Crs
4887 2945 Crs
4896 2951 Crs
4905 2957 Crs
4914 2964 Crs
4923 2970 Crs
4931 2976 Crs
4940 2982 Crs
4948 2988 Crs
4956 2995 Crs
4965 3001 Crs
4973 3007 Crs
4981 3013 Crs
4989 3019 Crs
4997 3025 Crs
5005 3031 Crs
5013 3037 Crs
5020 3043 Crs
5028 3049 Crs
5036 3055 Crs
5043 3061 Crs
5051 3067 Crs
5058 3073 Crs
5066 3079 Crs
5073 3085 Crs
5080 3091 Crs
5087 3096 Crs
5095 3102 Crs
5102 3108 Crs
5109 3114 Crs
5116 3120 Crs
5123 3125 Crs
5130 3131 Crs
5136 3137 Crs
5143 3142 Crs
5150 3148 Crs
5157 3154 Crs
5163 3159 Crs
5170 3165 Crs
5176 3171 Crs
5183 3176 Crs
5189 3182 Crs
5196 3187 Crs
5202 3193 Crs
5208 3198 Crs
5215 3204 Crs
5221 3209 Crs
5227 3215 Crs
5233 3220 Crs
5239 3225 Crs
5245 3231 Crs
5251 3236 Crs
5257 3241 Crs
5263 3247 Crs
5269 3252 Crs
5275 3257 Crs
5281 3263 Crs
5286 3268 Crs
5292 3273 Crs
5298 3278 Crs
5304 3283 Crs
5309 3289 Crs
5315 3294 Crs
5320 3299 Crs
5326 3304 Crs
5331 3309 Crs
5337 3314 Crs
5342 3319 Crs
5348 3324 Crs
5353 3329 Crs
5358 3334 Crs
5364 3339 Crs
5369 3344 Crs
5374 3349 Crs
5379 3354 Crs
5385 3359 Crs
5390 3364 Crs
5395 3369 Crs
5400 3374 Crs
5405 3379 Crs
5410 3384 Crs
5415 3388 Crs
5420 3393 Crs
5425 3398 Crs
5430 3403 Crs
5435 3408 Crs
5440 3412 Crs
5445 3417 Crs
5449 3422 Crs
6594 4599 Crs
1.000 UP
1.000 UL
LT2
LTb
6311 4459 M
gsave 0 setgray
[ [(Times-Roman,40) 140.0 0.0 true true 0 (QD0 \(CLIC 3TeV l*=3.5m\))]
] -46.7 MRshow
grestore
LT2
5015 2810 Star
6594 4459 Star
1.000 UP
1.000 UL
LT3
LTb
6311 4319 M
gsave 0 setgray
[ [(Times-Roman,40) 140.0 0.0 true true 0 (QD0 \(ILC 500GeV l*=3.5m\))]
] -46.7 MRshow
grestore
LT3
5358 3360 Box
6594 4319 Box
1.000 UP
1.000 UL
LT4
LTb
6311 4179 M
gsave 0 setgray
[ [(Times-Roman,40) 140.0 0.0 true true 0 (QD0 \(CLIC 500GeV l*=4.3m\))]
] -46.7 MRshow
grestore
LT4
4651 2815 BoxF
6594 4179 BoxF
1.000 UL
LTb
714 420 M
6248 0 V
0 4452 V
-6248 0 V
714 420 L
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman,40
%%Pages: 1

